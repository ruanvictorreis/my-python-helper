{"version":3,"sources":["MenuBar/MenuBar.js","Selection/Selection.js","Descriptor/Descriptor.js","Congrats/Congrats.js","Feedback/Feedback.js","CodeInput/CodeInput.js","TestOutput/TestOutput.js","Workspace/Connection/Server.js","Workspace/Workspace.js","App.js","serviceWorker.js","index.js"],"names":["MenuBar","props","react_default","a","createElement","Menu","fixed","inverted","Container","Item","as","header","Image","size","src","imageSrc","style","marginRight","title","Selection","Button","Group","basic","assignment","onClick","changeSelection","color","selection","Descriptor","Segment","Header","Icon","name","Content","Divider","textAlign","react_highlight_default","className","description","Congrats","Modal","open","show","marginTop","marginLeft","image","Description","Actions","icon","labelPosition","content","close","Feedback","repairsList","repairs","length","map","repair","List","key","require","CodeInput","studentCode","react_codemirror2","value","options","mode","lineNumbers","onChange","editor","data","primary","loading","isLoading","assertCode","TestOutput","Grid","centered","Column","width","concat","failedTest","obtained","expected","Server","_this","this","Object","classCallCheck","assert","submission","context","axios","post","host","then","response","assertHandler","repairCode","callback","Workspace","possibleConstructorReturn","getPrototypeOf","call","resetState","setState","toggleLoader","setStudentCode","register","server","assertThisInitialized","showTestOutput","repairHandler","result","repaired","setRepairs","repairsFail","state","syntaxError","isCorrect","modalCongrats","currentCode","initialCode","Row","src_CodeInput_CodeInput","src_TestOutput_TestOutput","src_Feedback_Feedback","Component","App","showCongrats","setAssignment","e","_ref","setDescription","setInitialCode","get","toggleCongrats","msg","error","info","_this2","src_MenuBar_MenuBar","dist_default","assign","ref","offset","position","theme","time","transition","src_Congrats_Congrats","margin","src_Selection_Selection","src_Descriptor_Descriptor","src_Workspace_Workspace","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6fbbd2d7.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu, Container, Image } from 'semantic-ui-react';\n\nconst MenuBar = (props) => {\n  return (\n    <div>\n      <Menu fixed='top' inverted>\n        <Container>\n          <Menu.Item as='h3' header>\n            <Image size='mini' src={props.imageSrc} style={{ marginRight: '1.5em' }} />\n            {props.title}\n          </Menu.Item>\n        </Container>\n      </Menu>\n    </div>\n  );\n}\n\nexport default MenuBar;","import React from 'react';\nimport { Button } from 'semantic-ui-react'\n\nconst Selection = (props) => {\n  const fibonacci = 'fibonacci'\n  const sumOfSquares = 'sum_of_squares'\n  const isPrimeNumber = 'is_prime_number'\n\n  const selectedColor = 'black'\n  const unselectedColor = 'grey'\n\n  return (\n    <div>\n      <Button.Group size='medium'>\n        <Button basic assignment={sumOfSquares}\n          onClick={props.changeSelection}\n          color={props.selection === sumOfSquares ?\n            selectedColor : unselectedColor}>\n          Sum of Squares\n\t\t\t\t\t</Button>\n\n        <Button basic assignment={isPrimeNumber}\n          onClick={props.changeSelection}\n          color={props.selection === isPrimeNumber ?\n            selectedColor : unselectedColor}>\n          Prime Numbers\n\t\t\t\t\t</Button>\n\n        <Button basic assignment={fibonacci}\n          onClick={props.changeSelection}\n          color={props.selection === fibonacci ?\n            selectedColor : unselectedColor}>\n          Fibonacci\n\t\t\t\t\t</Button>\n      </Button.Group>\n    </div>\n  );\n}\n\nexport default Selection;","import React from 'react';\nimport Highlight from 'react-highlight';\nimport { Container, Divider, Segment, Header, Icon } from 'semantic-ui-react'\n\nconst Descriptor = (props) => {\n\n  return (\n    <div>\n      <Segment>\n        <Header as='h4'>\n          <Icon name='bullhorn' />\n          <Header.Content>Problem Description</Header.Content>\n        </Header>\n\n        <Divider />\n\n        <Container textAlign='justified'>\n          <Highlight className=\"python\">\n            {props.description}\n          </Highlight>\n        </Container>\n      </Segment>\n    </div>\n  );\n}\n\nexport default Descriptor;","import React from 'react';\nimport { Modal, Icon, Header, Button } from 'semantic-ui-react';\n\nconst Congrats = (props) => {\n  const inlineStyle = {\n    modal: {\n      marginTop: '0px !important',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  };\n\n  return (\n    <div>\n      <Modal size='small'\n        open={props.show}\n        style={inlineStyle.modal}>\n\n        <Modal.Header>Congrats!</Modal.Header>\n\n        <Modal.Content image>\n          <Icon name=\"check circle outline\" color='teal' size='massive' />\n          <Modal.Description>\n            <Header>Your code is correct! Now you can try another problems.</Header>\n          </Modal.Description>\n        </Modal.Content>\n\n        <Modal.Actions>\n          <Button color='teal' icon='close' labelPosition='right'\n            content=\"Close\"\n            onClick={props.close} />\n        </Modal.Actions>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Congrats;","import React from 'react';\nimport { Segment, Icon, List, Header, Divider } from 'semantic-ui-react'\n\nconst Feedback = (props) => {\n\n  let repairsList = null\n\n  if (props.repairs.length > 0) {\n    repairsList = props.repairs.map(repair => {\n      return (\n        <List.Item key={repair} as='a'>\n          <Icon name='right triangle' />\n          <List.Content>\n            <List.Header>{repair}</List.Header>\n          </List.Content>\n        </List.Item>\n      );\n    });\n  }\n\n  return (\n    <div>\n      <Segment>\n        <Header as='h4'>\n          <Icon name='student' />\n          <Header.Content>Helper</Header.Content>\n        </Header>\n\n        <Divider />\n\n        <List>\n          {repairsList}\n        </List>\n      </Segment>\n    </div>\n  );\n}\n\nexport default Feedback","import React from 'react';\nimport { Segment, Button, Header, Divider, Icon } from 'semantic-ui-react'\nimport { UnControlled as CodeMirror } from 'react-codemirror2'\nrequire('codemirror/mode/xml/xml');\nrequire('codemirror/mode/python/python');\n\nconst CodeInput = (props) => {\n  const options = {\n    mode: 'python',\n    lineNumbers: true\n  };\n\n  var studentCode = props.studentCode\n\n  return (\n    <div>\n      <Segment>\n        <Header as='h4'>\n          <Icon name='code' />\n          <Header.Content>Your Code</Header.Content>\n        </Header>\n\n        <Divider />\n\n        <CodeMirror\n          value={studentCode}\n          options={options}\n          onChange={(editor, data, value) => studentCode = value} />\n\n        <br />\n\n        <Button primary loading={props.isLoading}\n          onClick={() => props.assertCode(studentCode)}>\n          Submit\n       </Button>\n      </Segment>\n    </div>\n  );\n}\n\nexport default CodeInput;","import React from 'react';\nimport { Grid, Segment, Header, Icon, Divider } from 'semantic-ui-react'\nimport Highlight from 'react-highlight';\n\nconst TestOutput = (props) => {\n  return (\n    <div>\n      <Segment>\n        <Header as='h4'>\n          <Icon name='bug' />\n          <Header.Content>Test</Header.Content>\n        </Header>\n\n        <Divider />\n\n        <Grid centered>\n          <Grid.Column width={8}>\n            <Highlight className=\"python\">\n              {`# Result:\\n${props.failedTest}\\n>>> ${props.obtained}`}\n            </Highlight>\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <Highlight className=\"python\">\n              {`# Expected:\\n${props.failedTest}\\n>>> ${props.expected}`}\n            </Highlight>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </div>\n  );\n}\n\nexport default TestOutput;","import axios from 'axios';\n\nclass Server {\n  constructor() {\n    this.host = '18.231.184.37';\n  }\n\n  assert = (submission, context) => {\n    axios.post(`http://${this.host}:8081/api/assert/`, submission)\n      .then(function (response) {\n        context.assertHandler(response.data)\n      });\n  }\n\n  repairCode = (submission, callback) => {\n    axios.post(`http://${this.host}:8081/api/repair/python/`, submission)\n      .then(function (response) {\n        callback(response.data)\n      });\n  }\n}\n\nexport default Server;","import React, { Component } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport Feedback from '../Feedback/Feedback';\nimport CodeInput from '../CodeInput/CodeInput';\nimport TestOutput from '../TestOutput/TestOutput';\nimport Server from './Connection/Server';\n\nclass Workspace extends Component {\n  constructor(props) {\n    super(props);\n    this.server = new Server();\n    this.state = {\n      repairs: [],\n      loading: false,\n      failedTest: '',\n      obtained: '',\n      expected: '',\n      studentCode: ''\n    };\n  }\n\n  componentDidUpdate(props) {\n    if (props.assignment !== this.props.assignment) {\n      this.resetState();\n    }\n  }\n\n  resetState = () => {\n    const state = {\n      repairs: [],\n      loading: false,\n      failedTest: '',\n      obtained: '',\n      expected: '',\n      studentCode: ''\n    };\n\n    this.setState(state);\n  }\n\n  assertCode = (studentCode) => {\n    this.toggleLoader();\n    this.setStudentCode(studentCode);\n\n    const submission = {\n      register: 'defaultUser',\n      studentCode: studentCode,\n      assignment: this.props.assignment\n    };\n\n    this.server.assert(submission, this);\n  }\n\n  assertHandler(result) {\n    if (result.syntaxError) {\n      this.toggleLoader();\n      this.props.syntaxError();\n      return;\n    }\n\n    if (result.isCorrect) {\n      this.toggleLoader();\n      this.props.modalCongrats();\n    } else {\n      const callback = this.repairHandler;\n      this.server.repairCode(result, callback);\n      this.showTestOutput(result);\n    }\n  }\n\n  showTestOutput = (assert) => {\n    this.setState({\n      expected: assert.expected,\n      obtained: assert.obtained,\n      failedTest: assert.failedTest\n    });\n  }\n\n  repairHandler = (result) => {\n    this.toggleLoader();\n\n    if (result.repaired) {\n      this.setRepairs(result.repairs)\n    } else {\n      this.props.repairsFail()\n    }\n  }\n\n  setRepairs = (repairs) => {\n    this.setState({ repairs: repairs });\n  }\n\n  setStudentCode = (studentCode) => {\n    this.setState({ studentCode: studentCode });\n  }\n\n  toggleLoader = () => {\n    const { loading } = this.state;\n    this.setState({ loading: !loading });\n  }\n\n  render() {\n    const currentCode = this.state.studentCode ?\n      this.state.studentCode : this.props.initialCode\n\n    return (\n      <div>\n        <Grid centered>\n          <Grid.Row>\n            <Grid.Column width={8}>\n              <CodeInput\n                studentCode={currentCode}\n                assertCode={this.assertCode}\n                isLoading={this.state.loading} />\n            </Grid.Column>\n\n            <Grid.Column width={8}>\n              <Grid.Row>\n                <TestOutput failedTest={this.state.failedTest}\n                  obtained={this.state.obtained}\n                  expected={this.state.expected} />\n              </Grid.Row>\n              <br />\n\n              <Grid.Row>\n                <Feedback repairs={this.state.repairs} />\n              </Grid.Row>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Workspace;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport AlertContainer from 'react-alert';\nimport MenuBar from './MenuBar/MenuBar';\nimport Selection from './Selection/Selection';\nimport Descriptor from './Descriptor/Descriptor';\nimport { Grid } from 'semantic-ui-react';\nimport Congrats from './Congrats/Congrats';\nimport Workspace from './Workspace/Workspace';\n\nclass App extends Component {\n  state = {\n    assignment: 'sum_of_squares',\n    description: '',\n    initialCode: '',\n    showCongrats: false,\n  }\n\n  componentDidMount() {\n    const { assignment } = this.state;\n    this.setDescription(assignment);\n    this.setInitialCode(assignment);\n  }\n\n  setAssignment = (e, { assignment }) => {\n    this.setState({ assignment: assignment });\n    this.setDescription(assignment);\n    this.setInitialCode(assignment);\n  }\n\n  setDescription = (assignment) => {\n    axios.get(`data/assignment/${assignment}.txt`)\n      .then((response) => {\n        this.setState({ description: response.data })\n      });\n  }\n\n  setInitialCode = (assignment) => {\n    axios.get(`data/initial/${assignment}.py`)\n      .then((response) => {\n        this.setState({ initialCode: response.data })\n      });\n  }\n\n  toggleCongrats = () => {\n    const { showCongrats } = this.state;\n    this.setState({ showCongrats: !showCongrats });\n  }\n\n  syntaxError = () => {\n    this.msg.error('Your code has syntax errors');\n  }\n\n  repairsFail = () => {\n    this.msg.info('We can not repair your code');\n  }\n\n  render() {\n    const alertOptions = {\n      offset: 15,\n      position: 'bottom left',\n      theme: 'light',\n      time: 10000,\n      transition: 'scale'\n    }\n\n    return (\n      <div>\n        <MenuBar title='My Python Helper'\n          imageSrc='./logo.png' />\n       \n        <AlertContainer ref={a => this.msg = a}\n          {...alertOptions} />\n\n        <Congrats show={this.state.showCongrats}\n          close={this.toggleCongrats} />\n\n        <Grid centered style={{ margin: '5.0em' }}>\n          <Grid.Row>\n            <Selection changeSelection={this.setAssignment}\n              selection={this.state.assignment} />\n          </Grid.Row>\n\n          <Grid.Row>\n            <Grid.Column width={14}>\n              <Descriptor description={this.state.description} />\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row>\n            <Grid.Column width={14}>\n              <Workspace assignment={this.state.assignment}\n                initialCode={this.state.initialCode}\n                syntaxError={this.syntaxError}\n                repairsFail={this.repairsFail}\n                modalCongrats={this.toggleCongrats} />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'highlight.js/styles/tomorrow.css';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}